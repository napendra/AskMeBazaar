<project name="askmebazaar" default="dist" basedir=".">

 <description>
  This is an example that demonstrates how to use Ant to build and test a Java application
 </description>


 <!-- set global properties for this build -->
 <property name="src" location="src"/>
 <property name="build" location="build"/>
 <property name="dist" location="dist"/>
 <property name="src.test" location="tst"/>


 <!-- Set library variables -->
 <!-- <property name="jdom.home" location="c:\lib\jdom-b9" /> -->
 <property name="junit.home" location="https://bitbucket.org/napendra/askmebazaar/downloads" />
 <property name="httpclient.home" location="https://bitbucket.org/napendra/askmebazaar/downloads" />
 <property name="dataprovider.home" location="https://bitbucket.org/napendra/askmebazaar/downloads" />
 <property name="rt.home" location="https://bitbucket.org/napendra/askmebazaar/downloads" />
 <property name="json.home" location="https://bitbucket.org/napendra/askmebazaar/downloads" />
 <property name="commons.home" location="https://bitbucket.org/napendra/askmebazaar/downloads" />
 <property name="hamcrest.home" location="https://bitbucket.org/napendra/askmebazaar/downloads" />
 <property name="codec.home" location="https://bitbucket.org/napendra/askmebazaar/downloads" />


 <!-- Build the CLASSPATH -->
 <path id="classpath">
<!--  <fileset dir="${jdom.home}" includes="lib/*.jar"/>
  <fileset dir="${jdom.home}" includes="build/*.jar"/> -->
  <fileset dir="${junit.home}" includes="junit.jar"/>
  <fileset dir="${httpclient.home}" includes="org.apache.commons.httpclient.jar"/>
  <fileset dir="${dataprovider.home}" includes="junit-dataprovider-1.8.0.jar"/>
  <fileset dir="${rt.home}" includes="downloads/rt.jar"/>
  <fileset dir="${json.home}" includes="java-json.jar"/> 
  <fileset dir="${commons.home}" includes="commons-logging-1.2.jar"/>
  <fileset dir="${hamcrest.home}" includes="org.hamcrest.core_1.3.0.v201303031735.jar"/>  
  <fileset dir="${codec.home}" includes="org-apache-commons-codec.jar"/>
 </path>

 <path id="classpath.test">
  <path refid="classpath"/>
  <pathelement location="${build}"/>
 </path>



 <!--
   Initialize the environment
  -->
 <target name="init">
        <mkdir dir="bin"/>
        <copy includeemptydirs="false" todir="bin">
            <fileset dir="src">
                <exclude name="**/*.launch"/>
                <exclude name="**/*.java"/>
            </fileset>
        </copy>
        <copy includeemptydirs="false" todir="bin">
            <fileset dir="tst">
                <exclude name="**/*.launch"/>
                <exclude name="**/*.java"/>
            </fileset>
        </copy>
    </target>


 <!-- 
   Compile source code
  -->
 <target name="compile" depends="init" description="compile the source " >

 <!-- Compile the java code from ${src} and ${src.test} into ${build} -->
 <javac destdir="bin" >
  <src path="${src}" />
  <src path="${src.test}" />
  <classpath refid="classpath"/>
 </javac>

 </target>


 <!--
   Build the distribution files
  -->
 <target name="dist" depends="test,compile" description="generate the distribution" >
  <!-- Create the distribution directory -->
  <mkdir dir="${dist}/lib"/>

  <!-- Put everything in ${build} into the MyProject-${DSTAMP}.jar file -->
  <jar jarfile="${dist}/lib/AntJUnitExample.jar" >
   <fileset dir="${build}">
    <exclude name="**/*Test*" />
   </fileset>
  </jar>
 </target>


 <!--
   Execute Unit Tests
  -->
 <target name="test" depends="compile" description="Execute Unit Tests" >
  <junit printsummary="yes" fork="no" haltonfailure="yes">
   <classpath refid="classpath.test" />

   <formatter type="xml" />

   <test name="com.canbrand.askmebazaar.AskMeBazaarOrderFetchTest" />
  </junit>
 </target>


 <!--
   Clean up the environment
  -->
 <target name="clean" description="clean up" >
  <!-- Delete the ${build} and ${dist} directory trees -->
  <delete dir="${build}"/>
  <delete dir="${dist}"/>
 </target>

</project>
